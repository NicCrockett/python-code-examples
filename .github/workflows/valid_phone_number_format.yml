# Name of the GitHub Action.
name: Valid Phone Number Format Example

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run workflow manually from the Actions tab.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This workflow contains a single job called "build".
  build:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest

    # The directory used for the virtual environment.
    env:
      working-directory: ./valid-phone-number-format

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
    - uses: actions/checkout@v2

    # Sets up the Python version in the "build" environment.
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9

    # Run the "install" instructions in the directories makefile to install all dependencies.
    - name: Install dependencies
      working-directory: ${{env.working-directory}}
      run: |
        make install

    # Run the "lint" instructions in the directories makefile to lint Python files using Pylint.
    - name: Lint with Pylint
      working-directory: ${{env.working-directory}}
      run: |
        make lint

    # Run the "test" instructions in the directories makefile to test Python files using Pytest.
    - name: Test with Pytest
      working-directory: ${{env.working-directory}}
      run: |
        make test

    # Runs a set of commands using the runners shell to commit to the repository.
    - name: Auto Update test_results.txt.
      working-directory: ${{env.working-directory}}
      run: |
        git config --local user.email "$(git log --format='%ae' HEAD^!)"
        git config --local user.name "$(git log --format='%an' HEAD^!)"
        git remote add github "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
        git commit -m "Auto Update commit via Github Actions" test_results.txt
        git push github HEAD:${GITHUB_REF}

    # Run the "format" instructions in the directories makefile to format Python files.
    - name: Format code with Python black
      working-directory: ${{env.working-directory}}
      run: |
        make format
